geom_histogram() +
facet_wrap( ~ Material,
ncol = 1,
scales = "free_y") +
scale_x_log10()
ggplot(jerimalai_lithics_to_plot_4,
aes(Material,
Weight)) +
geom_boxplot() +
geom_sina(alpha = 0.01) +
scale_y_log10()
with(jerimalai_lithics_to_plot_4,
kruskal.test(Weight ~ as.factor(Material)))
library(FSA)
my_dunn_test <-
with(jerimalai_lithics_to_plot_4,
dunnTest(Weight ~ as.factor(Material),
method="bh"))
my_dunn_test
str(my_dunn_test)
my_dunn_test$res
arrange(my_dunn_test$res, P.adj)
my_anova <-
with(jerimalai_lithics_to_plot_4,
aov(Weight ~ as.factor(Material)))
summary(my_anova)
my_tukeyhsd <- TukeyHSD(my_anova)
my_tukeyhsd
str(my_tukeyhsd)
library(broom)
tidy(my_tukeyhsd)
ktc_ceramic_data %>%
group_by(Context) %>%
summarise(sum_counts = sum(Counts))
ktc_ceramic_data %>%
mutate(Context = ifelse(grepl("L|U", Context), 7, Context)) %>%
group_by(Context) %>%
summarise(sum_counts = sum(Counts)) %>%
mutate(Context = as.numeric(Context))
install.packages("RecordLinkage")
library(readr)
ktc_ceramic_data <- read_csv("data/ktc_ceramic_data.csv")
library(readxl)
jerimalai_lithics <- read_excel("data/jerimalai_lithics.xlsx")
my_list_of_files <- list.files(path = "data/many_excel_files/",
full.names = TRUE)
library(purrr)
data_from_my_files <- map(my_list_of_files,
~read_excel(.x))
warnings()
str(y) # vector
str(ktc_ceramic_data)      # data frame
str(mjb_shells)            # data frame with problems!
glimpse(ktc_ceramic_data)
library(dplyr)
glimpse(ktc_ceramic_data)
head(ktc_ceramic_data)
tail(ktc_ceramic_data)
names(ktc_ceramic_data)
View(ktc_ceramic_data)
j_weights <- jerimalai_lithics$Weight
mean(j_weights) # NA , why?
?mean           # check help documentation
mean(j_weights, na.rm = TRUE) # ok!
jerimalai_lithics[ 1:10, ]     # rows 1-10,  all cols
jerimalai_lithics[ 1:10, 1:4]  # rows 1-10, 1-4 cols only
jerimalai_lithics[ jerimalai_lithics$Material == "Chert", ]
jerimalai_lithics$Material == "Chert" # it's a logical vector!
jerimalai_lithics %>%
filter(Material == "Chert")
jerimalai_lithics %>%
filter(Material == "Chert" &
Weight > 0.5)
jerimalai_lithics %>%
filter(Material == "Chert" &
Weight >= 0.5 &
Weight <= 5)
unique(jerimalai_lithics$Material) # the unique values
table(jerimalai_lithics$Material)  # each value appears in how many rows?
jerimalai_lithics %>%
filter(Material %in% c("Chert", "Volcanic") &
Weight > 0.5 &
Weight < 5)
mjb_shells_split_better %>%
arrange(C_perc)
jerimalai_lithics %>%
mutate(flake_area = Length * Width)
mjb_shells_split_better %>%
arrange(C_perc)
jerimalai_lithics %>%
arrange(Weigth)
jerimalai_lithics %>%
arrange(Weight)
jerimalai_lithics %>%
arrange(-Weight)
jerimalai_lithics %>%
arrange(desc(Weight))
jerimalai_lithics %>%
summarise(mean_weight = mean(Weight)) # why NA?
jerimalai_lithics %>%
summarise(mean_weight = mean(Weight, na.rm = TRUE))
jerimalai_lithics %>%
filter(Material == "Chert") %>%
summarise(mean_weight = mean(Weight, na.rm = TRUE))
jerimalai_lithics %>%
group_by(Material)  %>%
tally()
jerimalai_lithics %>%
group_by(Material)  %>%
tally() %>%
arrange(desc(n))
jerimalai_lithics_raw_materials <-
jerimalai_lithics %>%
group_by(Material)  %>%
tally() %>%
arrange(desc(n)) %>%
mutate(perc = n / sum(n) * 100)
jerimalai_lithics %>%
group_by(Material) %>%
tally() %>%
arrange(desc(n)) %>%
mutate(perc = round(n / sum(n) * 100, 2))
jerimalai_lithics %>%
group_by(Material) %>%
summarise(mean_weight = mean(Weight, na.rm = TRUE),
mean_length = mean(Length, na.rm = TRUE))
jerimalai_lithics %>%
group_by(Material) %>%
summarise_if(is.numeric,
mean,
na.rm = TRUE)
jerimalai_lithics %>%
group_by(Material) %>%
summarise_if(is.numeric,
funs(mean, sd),
na.rm = TRUE)
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram()
library(ggplot2) # good documentation at http://docs.ggplot2.org/current/ & http://www.cookbook-r.com/Graphs/
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram()
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(colouur = "red")
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(colour = "red")
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(colour = "red", fill = "red")
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(colour = "green",
fill = "red")
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(`bins = 10)
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(bins = 10)
ggplot(jerimalai_lithics,
aes(Length)) +
geom_histogram(bins = 100)
ggplot(jerimalai_lithics_raw_materials,
aes(Material,
perc)) +
geom_col()
ggplot(jerimalai_lithics_raw_materials,
aes(reorder(Material, -perc),
perc)) +
geom_col()
ggplot(jerimalai_lithics_raw_materials,
aes(reorder(Material, perc),
perc)) +
geom_col() +
coord_flip()
ggplot(jerimalai_lithics_raw_materials,
aes(reorder(Material, perc),
perc)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5))
ggplot(jerimalai_lithics_raw_materials,
aes(reorder(Material, perc),
perc)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5)) +
xlab("Raw material type") +
ylab("Percentage")
ggplot(jerimalai_lithics_raw_materials,
aes(reorder(Material, perc),
perc)) +
geom_col() +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5)) +
xlab("Raw material type") +
ylab("Percentage")
jerimalai_lithics_raw_materials %>%
filter(Material != "NA") %>%
ggplot(
aes(reorder(Material, perc),
perc)) +
geom_col() +
coord_flip()
jerimalai_lithics_raw_materials %>%
filter(Material != "NA") %>%
ggplot(aes(reorder(Material, perc),
perc)) +
geom_col() +
coord_flip()
jerimalai_lithics_raw_materials
ggplot(jerimalai_lithics_raw_materials,
aes(reorder(Material, perc),
perc)) +
geom_col() +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5)) +
xlab("Raw material type") +
ylab("Percentage")
jerimalai_lithics_raw_materials
jerimalai_lithics
ggplot(jerimalai_lithics,
aes(x = Spit,
y = Weight,
group = Species)) +
geom_line()
ggplot(jerimalai_lithics,
aes(x = Spit,
y = Weight,
group = Spit)) +
geom_line()
ggplot(jerimalai_lithics,
aes(x = Spit,
y = Weight,
group = Weight)) +
geom_line()
ggplot(jerimalai_lithics,
aes(x = Spit,
y = Weight)) +
geom_line()
?geom_line
j_spit_length <-
jerimalai_lithics %>%
group_by(Spit) %>%
summarise(mean_length = mean(Length,
na.rm = TRUE))
ggplot(j_spit_length,
aes(Spit,
mean_length)) +
geom_line() +
theme_bw(base_size = 14)
ggplot(jerimalai_lithics,
aes(Material,
Weight)) +
geom_boxplot()
jerimalai_lithics_to_plot <-
jerimalai_lithics %>%
filter(Material != "NA")
ggplot(jerimalai_lithics_to_plot,
aes(Material,
Weight)) +
geom_boxplot()
ggplot(jerimalai_lithics_to_plot,
aes(Material,
Weight)) +
geom_boxplot() +
scale_y_log10()
ggplot(jerimalai_lithics_to_plot,
aes(Material,
Weight)) +
geom_boxplot() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4))
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4))
sum(jerimalai_lithics_to_plot$Weight == 0 , na.rm = TRUE)
jerimalai_lithics_to_plot <-
jerimalai_lithics %>%
filter(Weight != 0)
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4))
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4)) +
xlab("Raw Material") +
ylab("Weight (g)")
library(scales)
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
scale_y_log10(labels = comma) +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4)) +
xlab("Raw Material") +
ylab("Weight (g)")
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
scale_y_log10(labels = comma) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4)) +
xlab("Raw Material")  +
ylab("Weight (g)")
library(ggforce)
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
geom_sina(alpha = 0.005) + # experiment with the value for alpha
scale_y_log10(labels = comma) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4)) +
xlab("Raw Material")  +
ylab("Weight (g)")
library(ggforce)
install.packages("ggforce")
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
geom_sina(alpha = 0.005) + # experiment with the value for alpha
scale_y_log10(labels = comma) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4)) +
xlab("Raw Material")  +
ylab("Weight (g)")
library(ggforce)
ggplot(jerimalai_lithics_to_plot,
aes(reorder(Material, -Weight),
Weight)) +
geom_boxplot() +
geom_sina(alpha = 0.005) + # experiment with the value for alpha
scale_y_log10(labels = comma) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.4)) +
xlab("Raw Material")  +
ylab("Weight (g)")
ggplot(jerimalai_lithics_to_plot,
aes(Length,
Width)) +
geom_point()
ggplot(jerimalai_lithics_to_plot,
aes(Length,
Width,
colour = Material)) +
geom_point()
jerimalai_lithics_to_plot_raw_materials <-
jerimalai_lithics_to_plot %>%
filter(Material %in% c("Chert",
"Volcanic",
"Silcrete"))
ggplot(jerimalai_lithics_to_plot_raw_materials,
aes(Length,
Width,
shape = Material)) +
geom_point()
ggplot(jerimalai_lithics_to_plot_raw_materials,
aes(Length,
Width,
colour = Material,
size = Weight)) +
geom_point()
ggplot(jerimalai_lithics_to_plot_raw_materials,
aes(Length,
Width,
colour = Material)) +
geom_point(size = 1)
ggplot(jerimalai_lithics_to_plot_raw_materials,
aes(Length,
Width,
colour = Material)) +
geom_point(size = 1) +
geom_smooth()
ggplot(jerimalai_lithics_to_plot_raw_materials,
aes(Length,
Width
)) +
geom_point(aes(colour = Material),
size = 1) +
geom_smooth()
ggplot(jerimalai_lithics_to_plot_raw_materials,
aes(Length,
Width
)) +
geom_point(aes(colour = Material),
size = 1) +
geom_smooth(method = "lm")
library(plotly) # excellent documentation at https://plot.ly/r/
j_silcrete <-
jerimalai_lithics_to_plot_raw_materials %>%
filter(Material == "Silcrete") %>%
ggplot(aes(Length,
Width)) +
geom_point()
ggplotly(j_silcrete)
j_silcrete <-
jerimalai_lithics_to_plot_raw_materials %>%
filter(Material == "Silcrete") %>%
ggplot(aes(Length,
Width)) +
geom_point(aes(text = paste0("Spit: ", Spit)))
ggplotly(j_silcrete)
ggplot(jerimalai_lithics_to_plot_si_vo,
aes(Length)) +
geom_histogram() +
facet_wrap( ~ Material,
ncol = 1,
scales = "free_y")
jerimalai_lithics_to_plot_si_vo <-
jerimalai_lithics_to_plot %>%
filter(Material %in% c("Silcrete",
"Volcanic"))
ggplot(jerimalai_lithics_to_plot_si_vo,
aes(Length)) +
geom_histogram() +
facet_wrap( ~ Material,
ncol = 1,
scales = "free_y")
jerimalai_lithics_to_plot_si_vo %>%   # take the data frame...
split(.$Material) %>%                 # very similar to 'group_by'...
map(~ shapiro.test(.$Length))
jerimalai_lithics_to_plot_4 <-
jerimalai_lithics_to_plot %>%
filter(Material %in% c("Silcrete",
"Volcanic",
"Chert",
"Quartzite"))
ggplot(jerimalai_lithics_to_plot_4,
aes(Weight)) +
geom_histogram() +
facet_wrap( ~ Material,
ncol = 1,
scales = "free_y")
ktc_ceramic_data %>%
group_by(Context) %>%
summarise(sum_counts = sum(Counts))
ktc_ceramic_data
ktc_ceramic_data %>%
filter(Counts > 5)
ktc_ceramic_data %>%
mutate(av_mass = Counts / Mas)
ktc_ceramic_data %>%
mutate(av_mass = Counts / Mass)
ktc_ceramic_data %>%
arrange(desc(Mass))
ktc_ceramic_data %>%
summarise(total_mass = sum(Mass))
ktc_ceramic_data %>%
group_by(EU) %>%
summarise(av_mass = mean(Mass))
ggplot(ktc_ceramic_data,
aes(Mass)) +
geom_histogram()
ggplot(ktc_ceramic_data,
aes(EU, Count)) +
geom_col()
ktc_ceramic_data
ggplot(ktc_ceramic_data,
aes(EU, Counts)) +
geom_col()
ktc_plot <-
ggplot(ktc_ceramic_data,
aes(Mass, Counts)) +
geom_point()
ggplotly(ktc_plot)
ktc_plot <-
ggplot(ktc_ceramic_data,
aes(Mass, Counts)) +
geom_point(aes(text = paste0("EU: ", EU)))
ggplotly(ktc_plot)
ktc_ceramic_data %>%
group_by(Context) %>%
summarise(sum_counts = sum(Counts))
